#+OPTIONS: num:nil
* MealShuffler
** Intro
MealShuffler is a small app thought to give meal suggestions based on a
pool of different meals which you create yourself. It will pick one meal,
at random, from the pool and then place it on a free day of the week.
Thereby creating a random list of meal proposals for everyday of the week.
** General Functionality
*** Create Meals
**** TODO Rank
Every meal should be able to get a rank. The rank will show how
common they are. In other words, 'Meatballs and pasta' is more common than 
'Sirloin with garlic butter' and will therefore appear more frequently on
a weekly basis.
**** TODO Ingredients
Every meal should have a list of ingredients to be able to create the
shopping list. 
*** Shuffle Meals over the week
**** TODO Shuffle based on rank
Every meal will be shuffled over the week. The standard settings should 
create a full month of meal suggestions.
*** Create shopping list
**** TODO List for one day
Combine all ingredients needed from all meals that day to create a list.
**** TODO List for one week
Just combine the one day list to form one for a week.
**** TODO List for one month
Just combine four weeks to make one month a proposals.
**** TODO Calculate approximate cost
Calculate the approximate cost of every meal and also the cost of the shopping list.
*** Export as iCalender (.ics)
**** TODO Add standard support
 Make it possible to export your lists to your calendar.
**** TODO Add a subscription option
** Structure
The app will be a two based solution consisting of client and a server. The client
will be what the user interacts with. The client itself will communicate with the
server by using api calls. 
*** Front End
The front end will be built using google's Angular 2 framework.
*** Back End
The back end will be built using Laravel. It will consist of a RESTful API which
will handle all the CRUD actions.
** Back End
*** API
- RESTful
- CRUD
*** Entities
+ Meal
  - name
  - description
  - imageUrl
  - ingredients
+ Ingredient
+ Day
  - meal
+ Week
  - days
+ Month
  - weeks
+ Year
  - months

